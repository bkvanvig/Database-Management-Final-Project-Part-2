drop view SP16_Prez_view ;
drop view SP16_PrevEmp_view ;
drop view SP16_Emp_view ;
drop view SP16_ProjEmp_view ;
drop view SP16_Mgr_view ;
drop view SP16_InterimMgr_view ;

drop view SP16_PrevProj_view ;
drop view SP16_CurrProj_view ;

drop view SP16_Dept_view;

drop view SP16_p2p_view;

drop sequence dept_deptno;
create sequence dept_deptno
start with 700
increment by 1
nomaxvalue;

drop sequence person_personID;
create sequence person_personID
start with 10
increment by 1
nomaxvalue;

drop sequence person_empID;
create sequence person_empID
start with 10
increment by 1
nomaxvalue;

drop sequence proj_projno;
create sequence proj_projno
start with 300
increment by 1
nomaxvalue;

drop sequence p2p_p2pID;
create sequence p2p_p2pID
start with 50
increment by 1
nomaxvalue;

create view SP16_Prez_view as
SELECT 
    *
FROM SP16_Person where type = 'President' ;

create or replace TRIGGER SP16_Prez_trigger
     INSTEAD OF insert ON SP16_Prez_view
     FOR EACH ROW
     DECLARE empID NUMBER;
BEGIN
    empID := person_empID.nextval;
    
    insert into SP16_Person( 
        personID,
        type,
        firstName,
        lastName,
        homeAddress,
        zipCode,
        homePhone,
        usCitizen,
        empID,
        salException,
        sal,
        bonus,
        deptno,
        personID1,
        projno)
    VALUES ( 
        :NEW.personID,
        'President',
        :NEW.firstName,
        :NEW.lastName,
        :NEW.homeAddress,
        :NEW.zipCode,
        :NEW.homePhone,
        :NEW.usCitizen,
        empID,
        :NEW.salException,
        :NEW.sal,
        :NEW.bonus,
        :NEW.deptno,
        :NEW.personID1,
        :NEW.projno) ;
END;
/

create view SP16_PrevEmp_view as
SELECT 
    *
FROM SP16_Person where type = 'Previous Employee' ;

create or replace TRIGGER SP16_PrevEmp_trigger
     INSTEAD OF insert ON SP16_PrevEmp_view
     FOR EACH ROW
     DECLARE personID NUMBER;
BEGIN
    personID := person_personID.nextval;
    insert into SP16_Person( 
        personID,
        type,
        firstName,
        lastName,
        homeAddress,
        zipCode,
        homePhone,
        usCitizen,
        isFired,
        sal,
        deptno,
        personID1,
        projno)
    VALUES ( 
        personID,
        'Previous Employee',
        :NEW.firstName,
        :NEW.lastName,
        :NEW.homeAddress,
        :NEW.zipCode,
        :NEW.homePhone,
        :NEW.usCitizen,
        :NEW.isFired,
        :NEW.sal,
        :NEW.deptno,
        :NEW.personID1,
        :NEW.projno) ;
END;
/

create view SP16_Emp_view as
SELECT 
    *
FROM SP16_Person where type = 'Employee' ;

create or replace TRIGGER SP16_Emp_trigger
     INSTEAD OF insert ON SP16_Emp_view
     FOR EACH ROW
     DECLARE personID NUMBER;
             empID NUMBER;
BEGIN
    personID := person_personID.nextval;
    empID := person_empID.nextval;
    insert into SP16_Person( 
        personID,
        type,
        firstName,
        lastName,
        homeAddress,
        zipCode,
        homePhone,
        usCitizen,
        empID,
        salException,
        sal,
        deptno,
        personID1,
        projno)
    VALUES ( 
        personID,
        'Employee',
        :NEW.firstName,
        :NEW.lastName,
        :NEW.homeAddress,
        :NEW.zipCode,
        :NEW.homePhone,
        :NEW.usCitizen,
        empID,
        :NEW.salException,
        :NEW.sal,
        :NEW.deptno,
        :NEW.personID1,
        :NEW.projno) ;
END;
/

create view SP16_ProjEmp_view as
SELECT 
    *
FROM SP16_Person where type = 'Project Employee' ;

create or replace TRIGGER SP16_ProjEmp_trigger
     INSTEAD OF insert ON SP16_ProjEmp_view
     FOR EACH ROW
     DECLARE personID NUMBER;
             empID NUMBER;
BEGIN
    personID := person_personID.nextval;
    empID := person_empID.nextval;
    insert into SP16_Person( 
        personID,
        type,
        firstName,
        lastName,
        homeAddress,
        zipCode,
        homePhone,
        usCitizen,
        empID,
        salException,
        sal,
        deptno,
        personID1,
        projno)
    VALUES ( 
        personID,
        'Project Employee',
        :NEW.firstName,
        :NEW.lastName,
        :NEW.homeAddress,
        :NEW.zipCode,
        :NEW.homePhone,
        :NEW.usCitizen,
        empID,
        :NEW.salException,
        :NEW.sal,
        :NEW.deptno,
        :NEW.personID1,
        :NEW.projno) ;
END;
/

create view SP16_Mgr_view as
SELECT 
    *
FROM SP16_Person where type = 'Manager' ;

create or replace TRIGGER SP16_Mgr_trigger
     INSTEAD OF insert ON SP16_Mgr_view
     FOR EACH ROW
     DECLARE personID NUMBER;
             empID NUMBER;
BEGIN
    personID := person_personID.nextval;
    empID := person_empID.nextval;
    insert into SP16_Person( 
        personID,
        type,
        firstName,
        lastName,
        homeAddress,
        zipCode,
        homePhone,
        usCitizen,
        empID,
        salException,
        sal,
        bonus,
        deptno,
        personID1,
        projno)
    VALUES ( 
        personID,
        'Manager',
        :NEW.firstName,
        :NEW.lastName,
        :NEW.homeAddress,
        :NEW.zipCode,
        :NEW.homePhone,
        :NEW.usCitizen,
        empID,
        :NEW.salException,
        :NEW.sal,
        :NEW.bonus,
        :NEW.deptno,
        :NEW.personID1,
        :NEW.projno) ;
END;
/

create view SP16_InterimMgr_view as
SELECT 
    *
FROM SP16_Person where type = 'Interim Manager' ;

create or replace TRIGGER SP16_InterimMgr_trigger
     INSTEAD OF insert ON SP16_InterimMgr_view
     FOR EACH ROW
     DECLARE personID NUMBER;
             empID NUMBER;
BEGIN
    personID := person_personID.nextval;
    empID := person_empID.nextval;
    insert into SP16_Person( 
        personID,
        type,
        firstName,
        lastName,
        homeAddress,
        zipCode,
        homePhone,
        usCitizen,
        empID,
        salException,
        sal,
        bonus,
        deptno,
        personID1,
        projno)
    VALUES ( 
        personID,
        'Interim Manager',
        :NEW.firstName,
        :NEW.lastName,
        :NEW.homeAddress,
        :NEW.zipCode,
        :NEW.homePhone,
        :NEW.usCitizen,
        empID,
        :NEW.salException,
        :NEW.sal,
        :NEW.bonus,
        :NEW.deptno,
        :NEW.personID1,
        :NEW.projno) ;
END;
/


create view SP16_PrevProj_view as
SELECT 
    *
FROM SP16_Proj where type = 'Previous Project' ;

create or replace TRIGGER SP16_PrevProj_trigger
     INSTEAD OF insert ON SP16_PrevProj_view
     FOR EACH ROW
     DECLARE projNo NUMBER ;
BEGIN
    projNo := proj_projNo.nextval;
    insert into SP16_Proj( 
        projNo,
        type,
        projTitle,
        projActive,
        endDate,
        estHours,
        projNo1,
        personID,
        deptNo)
    VALUES ( 
        projNo,
        'Previous Project',
        :NEW.projTitle,
        0,
        :NEW.endDate,
        :NEW.estHours,
        :NEW.projNo1,
        :NEW.personID,
        :NEW.deptNo) ;
END;
/

create view SP16_CurrProj_view as
SELECT 
    *
FROM SP16_Proj where type = 'Current Project' ;

create or replace TRIGGER SP16_CurrProj_trigger
     INSTEAD OF insert ON SP16_CurrProj_view
     FOR EACH ROW
     DECLARE projNO NUMBER ;
BEGIN
    projNo := proj_projNo.nextval;
    insert into SP16_Proj( 
        projNo,
        type,
        projTitle,
        projActive,
        projNo1,
        personID,
        deptNo)
    VALUES ( 
        projNo,
        'Current Project',
        :NEW.projTitle,
        1,
        :NEW.projNo1,
        :NEW.personID,
        :NEW.deptNo) ;
END;
/

create view SP16_Dept_view as
SELECT 
    *
FROM SP16_Dept;

create or replace TRIGGER SP16_Dept_trigger
     INSTEAD OF insert ON SP16_Dept_view
     FOR EACH ROW
     DECLARE deptno NUMBER;
BEGIN
    deptno := dept_deptno.nextval;
    insert into SP16_Dept( 
        deptno,
        deptName)
    VALUES ( 
        deptno,
        :NEW.deptName) ;
END;
/

create view SP16_p2p_view as
SELECT 
    *
FROM SP16_p2p;

create or replace TRIGGER SP16_p2p_trigger
     INSTEAD OF insert ON SP16_p2p_view
     FOR EACH ROW
BEGIN
    insert into SP16_p2p( 
        type,
        personID,
        personID1)
    VALUES ( 
        :NEW.type,
        :NEW.personID,
        :NEW.personID1) ;
END;
/